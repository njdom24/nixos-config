# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "amdgpu.pcie_gen_cap=0x40000" "amdgpu.vis_vramlimit=256" "hid_apple.fnmode=2" ];
  boot.kernelPackages = pkgs.linuxPackages_latest;

  fileSystems."/" = {
      device = "/dev/disk/by-uuid/a4fa4d1f-24cc-45b6-890d-2526c32e922b";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" ];
  };

  fileSystems."/home" = {
      device = "/dev/disk/by-uuid/a4fa4d1f-24cc-45b6-890d-2526c32e922b";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" ];
  };

  fileSystems."/boot" = {
      device = "/dev/disk/by-uuid/84FF-36A5";
      fsType = "vfat";
  };

  swapDevices = [{
    device = "/var/lib/swapfile";
    size = 16*1024;
  }];

  zramSwap = {
    enable = true;
    memoryPercent = 30;
  };

  console = {
    # Found in /etc/kbd/consolefonts
    font = "${pkgs.terminus_font}/share/consolefonts/ter-114b.psf.gz";
    packages = with pkgs; [ terminus_font ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp170s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
