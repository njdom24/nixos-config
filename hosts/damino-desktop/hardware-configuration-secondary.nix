# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
let
  # GTX 960
  gpuIDs = [
    #"10de:1401" # Graphics
    #"10de:0fba" # Audio
  ];
in
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "btusb.enable_autosuspend=0" "amdgpu.gpu_recovery=1" "amdgpu.noretry=0" "hid_apple.fnmode=2" ];# ++ [ ("vfio-pci.ids=" + lib.concatStringsSep "," gpuIDs) ];
  # https://gitlab.freedesktop.org/drm/amd/-/issues/3149
  boot.kernelPackages = pkgs.linuxPackages_latest;
  #boot.kernelPatches = [ {
  #	name = "enable-hdmi-freesync";
  #	patch = ../../patches/enable-hdmi-freesync.mypatch;
  #}];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/fe2055ca-3525-4b13-bcd6-d578f0a416fb";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/fe2055ca-3525-4b13-bcd6-d578f0a416fb";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/66F1-B84B";
      fsType = "vfat";
    };

  swapDevices = [{
    device = "/var/lib/swapfile";
    size = 16*1024;
  }];

  zramSwap = {
    enable = true;
    memoryPercent = 30;
  };

  console = {
    # Found in /etc/kbd/consolefonts
    font = "${pkgs.terminus_font}/share/consolefonts/ter-114b.psf.gz";
    packages = with pkgs; [ terminus_font ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp14s0f3u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
