# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
let
  # GTX 960
  gpuIDs = [
    #"10de:1401" # Graphics
    #"10de:0fba" # Audio
  ];
in
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "i915" "vfio_pci" "vfio" "vfio_iommu_type1" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "usb-storage.quirks=2109:0715:u" "btusb.enable_autosuspend=0" "i915.enable_guc=3" "hid_apple.fnmode=2" ] ++ [ ("vfio-pci.ids=" + lib.concatStringsSep "," gpuIDs) ];
  # HF7-SU31C quirk: https://www.digitalpeer.com/blog/ubuntu-16-and-a-mediasonic-probox-hdl-su3
  boot.kernelPackages = pkgs.linuxPackages_latest;

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0713c829-2d10-4f77-b6d1-1ac368a4e143";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/0713c829-2d10-4f77-b6d1-1ac368a4e143";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F75F-02BA";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/mnt/ext" =
    { device = "/dev/disk/by-uuid/dbdb05bb-7e81-4215-84db-7600140707fd";
      fsType = "ext4";
      options = [ "nosuid" "nodev" "nofail" ];
    };

  fileSystems."/mnt/emet" =
    { device = "/dev/disk/by-uuid/07f94a08-6b3f-4a30-ab62-f100af1b706b";
      fsType = "btrfs";
      options = [ "nosuid" "nodev" "nofail" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/704fc96f-3966-4b93-8ddc-2812321743fb"; }
    ];

  zramSwap = {
    enable = true;
    memoryPercent = 30;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp14s0f3u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
